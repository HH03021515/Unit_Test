1、自动化测试框架鄙视链：
	PyTest——》UnitTest——》RobotFrameWork。环境直接import unittest就行。不用安装

2、有四大组件：
	a：test fixture:setUp（前置条件）、tearDown（后置条件）：用于初始化测试用例及清理和释放资源
	b：test case:测试用例，通过继承unittest.TestCase，来实现用例的继承。在UnitTest中，测试用例都是通过“test”关键字来识别的 。
	c：test suite:测试套件，也称之为测试用例集
	d：test runner:运行器，通过runner来调用suite去执行测试

3、UnitTest运行机制：通过在main函数中，调用unittest.main()运行所有内容
UnitTest自动化测试实战：
1、自动化测试减少冗余，便于维护
2、ddt数据驱动
	ddt(data-driver tests) 在实际测试中，单个测试是需要用多种不同的条件（测试数据）对其进行测试的。
	ddt中最基本的应用：在class前使用装饰器形式调用@ddt，在基于实际应用，选择对应装饰器来使用即可，说白了就是一个装饰器
	data一般用于设定参数每次传入一个
	unpack一般用于解析参数
	ddt对于数据的解析方式：解析一个，传参一个
	file_data是ddt中用于yml文件的装饰器

UnitTest断言：
	TestCase已经提供有封装好的断言方法进行断言校验。
	断言：
	用于校验实际结果与预期结果是否匹配，在断言的内容选择上，是有要求的。
	断言强调的是对于整个测试流程的结果进行判断，所以断言的内容是极为核心的。
	实际工作中常用断言：assertEqual，assertNotEqual

Skip用法：
	在Case中，对于不需要运行的用例或者特定条件下不执行的用例，可以应用skip()来实现有条件执行，或者绝对性跳过，用于对指定用例进行不执行操作。
	Skip通过装饰器进行使用

测试套件及Runner的运用使用：
	测试套件Suite
	1、用于给测试用例进行排序
